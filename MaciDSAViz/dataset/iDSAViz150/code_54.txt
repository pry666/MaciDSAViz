Name:Enqueue and dequeue linked List

Code:
class Node:
    def __init__(self, value):

        self.value = value
        self.next = None

class Queue:
    def __init__(self):

        self.front = None
        self.rear = None

    def is_empty(self):

        return self.front is None

    def enqueue(self, value):

        new_node = Node(value)
        if self.rear is None:
            self.front = self.rear = new_node
        else:
            self.rear.next = new_node
            self.rear = new_node

    def dequeue(self):

        if self.is_empty():
            raise IndexError("Queue is empty")
        value = self.front.value
        self.front = self.front.next
        if self.front is None:
            self.rear = None
        return value

if __name__ == "__main__":
    q = Queue()

    q.enqueue(10)
    q.enqueue(20)
    q.enqueue(30)

    print("Dequeued element:", q.dequeue())
    print("Dequeued element:", q.dequeue())