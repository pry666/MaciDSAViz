Name:Enqueue and dequeue array

Code:
class Queue:
    def __init__(self, size):

        self.size = size
        self.queue = [None] * size
        self.front = -1
        self.rear = -1

    def is_empty(self):

        return self.front == -1

    def is_full(self):

        return (self.rear + 1) % self.size == self.front

    def enqueue(self, value):

        if self.is_full():
            raise OverflowError("Queue is full")
        if self.is_empty():
            self.front = 0
        self.rear = (self.rear + 1) % self.size
        self.queue[self.rear] = value

    def dequeue(self):

        if self.is_empty():
            raise IndexError("Queue is empty")
        value = self.queue[self.front]
        self.queue[self.front] = None
        if self.front == self.rear:
            self.front = self.rear = -1
        else:
            self.front = (self.front + 1) % self.size
        return value

if __name__ == "__main__":
    q = Queue(5)

    q.enqueue(10)
    q.enqueue(20)
    q.enqueue(30)

    print("Dequeued element:", q.dequeue())
    print("Dequeued element:", q.dequeue())