Name:Rotation and scaling of 2D matrices

Code:
import numpy as np

def rotate_and_scale(matrix, angle_degrees, scale_x, scale_y):

    angle_radians = np.radians(angle_degrees)

    rotation_matrix = np.array([
        [np.cos(angle_radians), -np.sin(angle_radians)],
        [np.sin(angle_radians),  np.cos(angle_radians)]
    ])

    scaling_matrix = np.array([
        [scale_x, 0],
        [0, scale_y]
    ])

    transformation_matrix = rotation_matrix @ scaling_matrix

    transformed_matrix = np.dot(matrix, transformation_matrix.T)

    return transformed_matrix

if __name__ == "__main__":
    original_matrix = np.array([
        [1, 1],
        [2, 1],
        [2, 2],
        [1, 2]
    ])

    angle = 45
    scale_x = 2
    scale_y = 0.5

    result_matrix = rotate_and_scale(original_matrix, angle, scale_x, scale_y)

    print("原始矩阵：")
    print(original_matrix)

    print("旋转和缩放后的矩阵：")
    print(result_matrix)