Name:Implementing a stack with arrays

Code:
class StackArray:
    def __init__(self, capacity):

        self.stack = [None] * capacity
        self.capacity = capacity
        self.top = -1

    def push(self, value):

        if self.is_full():
            print("Stack Overflow! Cannot push.")
            return
        self.top += 1
        self.stack[self.top] = value
        print(f"Pushed {value} to the stack.")

    def pop(self):

        if self.is_empty():
            print("Stack Underflow! Cannot pop.")
            return None
        value = self.stack[self.top]
        self.stack[self.top] = None
        self.top -= 1
        print(f"Popped {value} from the stack.")
        return value

    def is_empty(self):

        return self.top == -1

    def is_full(self):

        return self.top == self.capacity - 1

    def peek(self):

        if self.is_empty():
            print("Stack is empty!")
            return None
        return self.stack[self.top]

    def display(self):

        print("Stack contents:", self.stack[:self.top + 1])


stack = StackArray(5)

stack.push(10)
stack.push(20)
stack.push(30)
stack.display()

stack.pop()
stack.display()

print("Top element:", stack.peek())

stack.pop()
stack.pop()
stack.pop()