Name:floyd

Code:
import matplotlib.pyplot as plt
import networkx as nx
import time
import numpy as np


def floyd_warshall_visualization(graph):

    n = len(graph)
    dist = np.array(graph, dtype=float)

    dist[dist == 0] = np.inf
    np.fill_diagonal(dist, 0)

    G = nx.DiGraph()
    for i in range(n):
        for j in range(n):
            if graph[i][j] > 0:
                G.add_edge(i, j, weight=graph[i][j])

    pos = nx.spring_layout(G)

    def draw_graph(step, k=None, i=None, j=None):
        plt.clf()
        nx.draw(G, pos, with_labels=True, node_color="skyblue", node_size=1500, font_size=14)
        labels = nx.get_edge_attributes(G, "weight")
        nx.draw_networkx_edge_labels(G, pos, edge_labels=labels, font_color="red", font_size=10)
        plt.title(f"Step {step}\n"
                  + (f"Processing k={k}, i={i}, j={j}" if k is not None else ""),
                  fontsize=16)
        plt.pause(1)

    draw_graph(step=0)

    step = 1
    for k in range(n):
        for i in range(n):
            for j in range(n):
                if dist[i, k] + dist[k, j] < dist[i, j]:
                    dist[i, j] = dist[i, k] + dist[k, j]
                    G[i][j]['weight'] = dist[i, j]
                draw_graph(step, k, i, j)
                step += 1

    draw_graph(step="Final")
    plt.show()

graph = [
    [0, 3, 0, 0, 0, 0],
    [0, 0, 1, 0, 0, 0],
    [0, 0, 0, 7, 0, 2],
    [0, 0, 0, 0, 0, 0],
    [0, 0, 0, 2, 0, 3],
    [0, 0, 0, 0, 0, 0],
]

floyd_warshall_visualization(graph)