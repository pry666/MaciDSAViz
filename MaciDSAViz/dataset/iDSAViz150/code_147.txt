Name:In-order traversal of a binary tree

Code:
class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right

root = TreeNode(1,
    left=TreeNode(2,
        left=TreeNode(4,
            left=TreeNode(8),
            right=TreeNode(9)
        ),
        right=TreeNode(5,
            left=TreeNode(10),
            right=TreeNode(11)
        )
    ),
    right=TreeNode(3,
        left=TreeNode(6,
            left=TreeNode(12),
            right=TreeNode(13)
        ),
        right=TreeNode(7,
            left=TreeNode(14),
            right=TreeNode(15)
        )
    )
)

def inorder_traversal_iterative(root):
    stack, result = [], []
    current = root

    while stack or current:
        while current:
            stack.append(current)
            current = current.left
        current = stack.pop()
        result.append(current.val)
        current = current.right

    return result

print("\n迭代实现中序遍历:")
print(inorder_traversal_iterative(root))