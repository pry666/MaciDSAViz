Name:search of BinarySearchTree

Code:
class TreeNode:

    def __init__(self, key):
        self.key = key
        self.left = None
        self.right = None


class BinarySearchTree:

    def __init__(self):
        self.root = None

    def insert(self, key):

        if not self.root:
            self.root = TreeNode(key)
        else:
            self._insert(self.root, key)

    def _insert(self, node, key):

        if key < node.key:
            if node.left:
                self._insert(node.left, key)
            else:
                node.left = TreeNode(key)
        elif key > node.key:
            if node.right:
                self._insert(node.right, key)
            else:
                node.right = TreeNode(key)

    def search(self, key):

        return self._search(self.root, key)

    def _search(self, node, key):

        if not node or node.key == key:
            return node
        elif key < node.key:
            return self._search(node.left, key)
        else:
            return self._search(node.right, key)



if __name__ == "__main__":
    bst = BinarySearchTree()

    for key in [50, 30, 70, 20, 40, 60, 80]:
        bst.insert(key)

    print("查找 40:", bst.search(40).key if bst.search(40) else "未找到")
    print("查找 25:", bst.search(25).key if bst.search(25) else "未找到")